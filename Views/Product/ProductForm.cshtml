@model InventoryApp.Models.ViewModels.ProductFormViewModel


@{
    ViewData["Title"] = "Product Form";
}


<div class="row mb-5">
    <h1 class="font-weight-bold">Create New</h1>
</div>

<div class="row">
    <div class="col-md-6 pl-0">
        <form method="post" enctype="multipart/form-data" asp-action="Save" asp-controller="Product">
            @Html.ValidationSummary()

            <div class="form-group">
                <label asp-for="Name"></label>
                <input asp-for="Name" type="text" class="form-control" placeholder="Enter Product Name">
                <span asp-validation-for="Name" class="form-text text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Images"></label>
                <input asp-for="Images" class="form-control-file" multiple >
                @{
                    if(Model.Id == null)
                    {
                        <span asp-validation-for="Images" class="form-text text-danger"></span>
                    } 
                }
            </div>

            <div class="form-group">
                <label asp-for="Unit"></label>
                <input asp-for="Unit" type="text" class="form-control" placeholder="Ex: Kg, L, Piece">
                <span asp-validation-for="Unit" class="form-text text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Price"></label>
                <input asp-for="Price" type="text" class="form-control" placeholder="Ex: 10.00">
                <span asp-validation-for="Price" class="form-text text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Currency"></label>
                <input asp-for="Currency" type="text" class="form-control" placeholder="Ex: BDT">
                <span asp-validation-for="Currency" class="form-text text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="InStock"></label>
                <input asp-for="InStock" type="text" class="form-control" placeholder="Ex: 1000">
                <span asp-validation-for="InStock" class="form-text text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="WarningLevel"></label>
                <input asp-for="WarningLevel" type="text" class="form-control" placeholder="Ex: 100">
                <span asp-validation-for="WarningLevel" class="form-text text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="PrimaryCategoryId"></label>

                <select asp-for="PrimaryCategoryId" class="form-control" onchange="populateSecondaryCategories()">
                    <option value="">Select Category</option>
                    @foreach (var category in Model.PrimaryCategories)
                    {
                        var selected = Model.PrimaryCategoryId == category.Id;
                        <option selected="@selected" value="@category.Id">@category.Name</option>
                    }
                </select>

                <span asp-validation-for="PrimaryCategoryId" class="form-text text-danger"></span>
            </div>
            
            <div class="form-group">
                <label asp-for="SecondaryCategoryId"></label>

                <select asp-for="SecondaryCategoryId" class="form-control" onchange="populateTertiaryCategories()">
                    <option value="">Select Category</option>
                    @foreach (var category in Model.SecondaryCategories)
                    {
                        var selected = Model.SecondaryCategoryId == category.Id;
                        <option selected="@selected" value="@category.Id">@category.Name</option>
                    }
                </select>

                <span asp-validation-for="SecondaryCategoryId" class="form-text text-danger"></span>
            </div>
            
            <div class="form-group">
                <label asp-for="TertiaryCategoryId"></label>

                <select asp-for="TertiaryCategoryId" class="form-control">
                    <option value="">Select Category</option>
                    @foreach (var category in Model.TertiaryCategories)
                    {
                        var selected = Model.TertiaryCategoryId == category.Id;
                        <option selected="@selected" value="@category.Id">@category.Name</option>
                    }
                </select>

                <span asp-validation-for="TertiaryCategoryId" class="form-text text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="BrandId"></label>
                <select asp-for="BrandId" class="form-control">
                    <option value="">Select Brand</option>
                    @foreach (var brand in Model.Brands)
                    {
                        var selected = Model.BrandId == brand.Id;
                        <option selected="@selected" value="@brand.Id">@brand.Name</option>
                    }
                </select>
                <span asp-validation-for="BrandId" class="form-text text-danger"></span>
            </div>

            <input asp-for="Id" type="hidden">

            <button class="btn btn-success mt-4" type="submit">Save</button>
        </form>
    </div>
</div>


@section Scripts{
    <partial name="_ValidationScriptsPartial" />


    <script>
        function populateSecondaryCategories() {

            $("#SecondaryCategoryId").empty().append(`<option value="">Select Category</option>`);
            let id = $("#PrimaryCategoryId").val();

            $.ajax({
                url: "/Category/GetChildCategories/" + id,
                success: function (response) {

                    if (response != null && response.data.length > 0) {
                        //$("#secondary-category").attr("hidden", false);

                        response.data.forEach(cat => $("#SecondaryCategoryId").append(`<option value="${cat.id}">${cat.name}</option>`));
                    }
                    //else {
                    //    $("#secondary-category").attr("hidden", true);
                    //}
                },
                error: function (errorMsg) {
                    console.log(errorMsg.responseText);
                }
            })
        }


        function populateTertiaryCategories() {

            $("#TertiaryCategoryId").empty().append(`<option value="">Select Category</option>`);
            let id = $("#SecondaryCategoryId").val();

            $.ajax({
                url: "/Category/GetChildCategories/" + id,
                success: function (response) {

                    if (response != null && response.data.length > 0) {
                        response.data.forEach(cat => $("#TertiaryCategoryId").append(`<option value="${cat.id}">${cat.name}</option>`));
                    }
                },
                error: function (errorMsg) {
                    console.log(errorMsg.responseText);
                }
            })
        }
    </script>
}